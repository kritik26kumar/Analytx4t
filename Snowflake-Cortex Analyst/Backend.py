-- Create warehouse
CREATE OR REPLACE WAREHOUSE tenwave_analyst_wh
    WAREHOUSE_SIZE = 'large'
    WAREHOUSE_TYPE = 'standard'
    AUTO_SUSPEND = 60
    AUTO_RESUME = TRUE
    INITIALLY_SUSPENDED = TRUE
COMMENT = 'Warehouse for Tenwave Analyst Chatbot';
ALTER ACCOUNT SET CORTEX_ENABLED_CROSS_REGION = 'any_region';

/*--
• Healthcare Billing Database Creation for Snowflake
--*/

-- Create database
CREATE DATABASE IF NOT EXISTS TENWAVE_DB;

-- Use the database
USE DATABASE TENWAVE_DB;

-- Create schema
CREATE SCHEMA IF NOT EXISTS DATA;

-- Use the schema
USE SCHEMA DATA;

/*--
• Dimension Table Creation
--*/

-- Dimension table: dim_branches
CREATE OR REPLACE TABLE TENWAVE_DB.DATA.DIM_BRANCHES (
    HOSPITAL_ID VARCHAR(255),
    HOSPITAL_NAME VARCHAR(255) NOT NULL,
    STATUS VARCHAR(50) DEFAULT 'Active',
    PRIMARY KEY (HOSPITAL_ID)
);

-- Dimension table: dim_departments
CREATE OR REPLACE TABLE TENWAVE_DB.DATA.DIM_DEPARTMENTS (
    DEPARTMENT_ID VARCHAR(255),
    DEPARTMENT_NAME VARCHAR(255) NOT NULL,
    ADMISSION_ALLOWED VARCHAR(50),
    OPD_ALLOWED VARCHAR(50),
    EMERGENCY_ALLOWED VARCHAR(50),
    STATUS VARCHAR(50),
    PRIMARY KEY (DEPARTMENT_ID)
);

-- Dimension table: dim_insproviders
CREATE OR REPLACE TABLE TENWAVE_DB.DATA.DIM_INSPROVIDERS (
    INSPROVIDER_ID VARCHAR(255),
    SPONSOR_NAME VARCHAR(255) NOT NULL,
    PRIMARY KEY (INSPROVIDER_ID)
);

-- Dimension table: dim_users (doctors)
CREATE OR REPLACE TABLE TENWAVE_DB.DATA.DIM_USERS (
    DOCTOR_ID VARCHAR(255),
    FIRST_NAME VARCHAR(100),
    LAST_NAME VARCHAR(100),
    DEPARTMENT_ID VARCHAR(255),
    STATUS VARCHAR(50),
    QUALIFICATION VARCHAR(255),
    SPECIALIZATION VARCHAR(255),
    PRIMARY KEY (DOCTOR_ID)
);

-- Dimension table: dim_patients
CREATE OR REPLACE TABLE TENWAVE_DB.DATA.DIM_PATIENTS (
    PATIENT_ID VARCHAR(255),
    REGISTRATION_DATE DATE,
    BIRTHDATE DATE,
    SEX VARCHAR(100),
    AGE NUMBER(3,0),
    NAME VARCHAR(255),
    PHONE_NUMBER VARCHAR(20),
    PRIMARY KEY (PATIENT_ID)
);

-- Bridge table: bridge_dim_patientinsurers
CREATE OR REPLACE TABLE TENWAVE_DB.DATA.BRIDGE_DIM_PATIENTINSURERS (
    PATIENT_ID VARCHAR(255),
    INSPROVIDER_ID VARCHAR(255),
    PRIMARY KEY (PATIENT_ID, INSPROVIDER_ID)
);

/*--
• Fact Table Creation
--*/

-- Fact table: fact_billing
CREATE OR REPLACE TABLE TENWAVE_DB.DATA.FACT_BILLING (
    BILLING_ID VARCHAR(255),
    PATIENT_ID VARCHAR(255),
    HOSPITAL_ID VARCHAR(255),
    BILL_STATUS VARCHAR(50),
    BILL_DATE TIMESTAMP,
    DEPARTMENT_ID VARCHAR(255),
    INSPROVIDER_ID VARCHAR(255),
    PARENT_TYPE VARCHAR(50),
    DOCTOR_ID VARCHAR(255),
    TOTAL_AMOUNT DECIMAL(20,2) NOT NULL,
    TOTAL_DISCOUNT DECIMAL(10,2) DEFAULT 0.00,
    IST_BILL_DATE TIMESTAMP,
    PRIMARY KEY (BILLING_ID)
);

/*--
• Create File Format for CSV Loading
--*/

CREATE OR REPLACE FILE FORMAT HEALTHCARE_CSV_FORMAT
TYPE = CSV
SKIP_HEADER = 1
FIELD_DELIMITER = ','
TRIM_SPACE = FALSE
FIELD_OPTIONALLY_ENCLOSED_BY = '"'
REPLACE_INVALID_CHARACTERS = TRUE
DATE_FORMAT = 'DD-MM-YYYY'
TIME_FORMAT = 'AUTO'
TIMESTAMP_FORMAT = 'DD-MM-YYYY HH24:MI'
EMPTY_FIELD_AS_NULL = TRUE
ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE;

/*--
• Create Stage for Data Loading (assuming internal stage)
--*/

CREATE OR REPLACE STAGE HEALTHCARE_DATA_STAGE
  DIRECTORY = (ENABLE = TRUE)
  FILE_FORMAT = HEALTHCARE_CSV_FORMAT;
/*--
• Load Data into Dimension Tables
--*/

-- Load data into dim_branches
COPY INTO TENWAVE_DB.DATA.DIM_BRANCHES
FROM @HEALTHCARE_DATA_STAGE
FILES = ('dim_branches.csv')
FILE_FORMAT = HEALTHCARE_CSV_FORMAT
ON_ERROR = CONTINUE
FORCE = TRUE;

-- Load data into dim_departments
COPY INTO TENWAVE_DB.DATA.DIM_DEPARTMENTS
FROM @HEALTHCARE_DATA_STAGE
FILES = ('dim_departments.csv')
FILE_FORMAT = HEALTHCARE_CSV_FORMAT
ON_ERROR = CONTINUE
FORCE = TRUE;

-- Load data into dim_insproviders
COPY INTO TENWAVE_DB.DATA.DIM_INSPROVIDERS
FROM @HEALTHCARE_DATA_STAGE
FILES = ('dim_insproviders.csv')
FILE_FORMAT = HEALTHCARE_CSV_FORMAT
ON_ERROR = CONTINUE
FORCE = TRUE;

-- Load data into dim_users
COPY INTO TENWAVE_DB.DATA.DIM_USERS
FROM @HEALTHCARE_DATA_STAGE
FILES = ('dim_users.csv')
FILE_FORMAT = HEALTHCARE_CSV_FORMAT
ON_ERROR = CONTINUE
FORCE = TRUE;

-- Load data into dim_patients (with date transformation)
COPY INTO TENWAVE_DB.DATA.DIM_PATIENTS
FROM (
    SELECT 
        $1 AS PATIENT_ID,
        TRY_TO_DATE($2, 'DD-MM-YYYY') AS REGISTRATION_DATE,
        TRY_TO_DATE($3, 'DD-MM-YYYY') AS BIRTHDATE,
        $4 AS SEX,
        TRY_TO_NUMBER($5) AS AGE,
        $6 AS NAME,
        $7 AS PHONE_NUMBER
    FROM @HEALTHCARE_DATA_STAGE/dim_patients.csv
)
FILE_FORMAT = HEALTHCARE_CSV_FORMAT
ON_ERROR = CONTINUE
FORCE = TRUE;


-- Load data into bridge_dim_patientinsurers
COPY INTO TENWAVE_DB.DATA.BRIDGE_DIM_PATIENTINSURERS
FROM @HEALTHCARE_DATA_STAGE
FILES = ('bridge_dim_patientinsurers.csv')
FILE_FORMAT = HEALTHCARE_CSV_FORMAT
ON_ERROR = CONTINUE
FORCE = TRUE;

-- Load data into fact_billing (with date and numeric transformations)
COPY INTO TENWAVE_DB.DATA.FACT_BILLING
FROM (
    SELECT 
        $1 AS BILLING_ID,
        $2 AS PATIENT_ID,
        $3 AS HOSPITAL_ID,
        $4 AS BILL_STATUS,
        TRY_TO_TIMESTAMP($5, 'DD-MM-YYYY HH24:MI') AS BILL_DATE,
        $6 AS DEPARTMENT_ID,
        $7 AS INSPROVIDER_ID,
        $8 AS PARENT_TYPE,
        $9 AS DOCTOR_ID,
        TRY_TO_NUMBER($10, 20, 2) AS TOTAL_AMOUNT,
        TRY_TO_NUMBER($11, 10, 2) AS TOTAL_DISCOUNT,
        TRY_TO_TIMESTAMP($12, 'DD-MM-YYYY HH24:MI') AS IST_BILL_DATE
    FROM @HEALTHCARE_DATA_STAGE/fact_billing.csv
)
FILE_FORMAT = HEALTHCARE_CSV_FORMAT
ON_ERROR = CONTINUE
FORCE = TRUE;


--Check the loaded data
select * from dim_branches;
select * from dim_departments;
select * from dim_insproviders;
select * from dim_patients;
select * from dim_users;
select * from bridge_dim_patientinsurers;
select * from fact_billing;


/*--
• Add Foreign Key Constraints (Optional in Snowflake)
--*/

-- Note: Snowflake supports foreign keys but they are not enforced
-- They are used primarily for query optimization and documentation

ALTER TABLE TENWAVE_DB.DATA.DIM_USERS
ADD CONSTRAINT FK_USERS_DEPARTMENT 
FOREIGN KEY (DEPARTMENT_ID) REFERENCES TENWAVE_DB.DATA.DIM_DEPARTMENTS(DEPARTMENT_ID);

ALTER TABLE TENWAVE_DB.DATA.FACT_BILLING
ADD CONSTRAINT FK_BILLING_PATIENT 
FOREIGN KEY (PATIENT_ID) REFERENCES TENWAVE_DB.DATA.DIM_PATIENTS(PATIENT_ID);

ALTER TABLE TENWAVE_DB.DATA.FACT_BILLING
ADD CONSTRAINT FK_BILLING_HOSPITAL 
FOREIGN KEY (HOSPITAL_ID) REFERENCES TENWAVE_DB.DATA.DIM_BRANCHES(HOSPITAL_ID);

ALTER TABLE TENWAVE_DB.DATA.FACT_BILLING
ADD CONSTRAINT FK_BILLING_DEPARTMENT 
FOREIGN KEY (DEPARTMENT_ID) REFERENCES TENWAVE_DB.DATA.DIM_DEPARTMENTS(DEPARTMENT_ID);

ALTER TABLE TENWAVE_DB.DATA.FACT_BILLING
ADD CONSTRAINT FK_BILLING_INSPROVIDER 
FOREIGN KEY (INSPROVIDER_ID) REFERENCES TENWAVE_DB.DATA.DIM_INSPROVIDERS(INSPROVIDER_ID);

ALTER TABLE TENWAVE_DB.DATA.FACT_BILLING
ADD CONSTRAINT FK_BILLING_DOCTOR 
FOREIGN KEY (DOCTOR_ID) REFERENCES TENWAVE_DB.DATA.DIM_USERS(DOCTOR_ID);

ALTER TABLE TENWAVE_DB.DATA.BRIDGE_DIM_PATIENTINSURERS
ADD CONSTRAINT FK_BRIDGE_PATIENT 
FOREIGN KEY (PATIENT_ID) REFERENCES TENWAVE_DB.DATA.DIM_PATIENTS(PATIENT_ID);

ALTER TABLE TENWAVE_DB.DATA.BRIDGE_DIM_PATIENTINSURERS
ADD CONSTRAINT FK_BRIDGE_INSPROVIDER 
FOREIGN KEY (INSPROVIDER_ID) REFERENCES TENWAVE_DB.DATA.DIM_INSPROVIDERS(INSPROVIDER_ID);

/*--
• Data Validation Queries
--*/

-- Check row counts in all tables
SELECT 'DIM_BRANCHES' AS TABLE_NAME, COUNT(*) AS ROW_COUNT FROM TENWAVE_DB.DATA.DIM_BRANCHES
UNION ALL
SELECT 'DIM_DEPARTMENTS', COUNT(*) FROM TENWAVE_DB.DATA.DIM_DEPARTMENTS
UNION ALL
SELECT 'DIM_INSPROVIDERS', COUNT(*) FROM TENWAVE_DB.DATA.DIM_INSPROVIDERS
UNION ALL
SELECT 'DIM_USERS', COUNT(*) FROM TENWAVE_DB.DATA.DIM_USERS
UNION ALL
SELECT 'DIM_PATIENTS', COUNT(*) FROM TENWAVE_DB.DATA.DIM_PATIENTS
UNION ALL
SELECT 'BRIDGE_DIM_PATIENTINSURERS', COUNT(*) FROM TENWAVE_DB.DATA.BRIDGE_DIM_PATIENTINSURERS
UNION ALL
SELECT 'FACT_BILLING', COUNT(*) FROM TENWAVE_DB.DATA.FACT_BILLING;

-- Sample data verification
SELECT * FROM TENWAVE_DB.DATA.DIM_BRANCHES LIMIT 5;
SELECT * FROM TENWAVE_DB.DATA.DIM_DEPARTMENTS LIMIT 5;
SELECT * FROM TENWAVE_DB.DATA.DIM_INSPROVIDERS LIMIT 5;
SELECT * FROM TENWAVE_DB.DATA.DIM_USERS LIMIT 5;
SELECT * FROM TENWAVE_DB.DATA.DIM_PATIENTS LIMIT 5;
SELECT * FROM TENWAVE_DB.DATA.BRIDGE_DIM_PATIENTINSURERS LIMIT 5;
SELECT * FROM TENWAVE_DB.DATA.FACT_BILLING LIMIT 5;

/*--
• Business Intelligence Queries
--*/

-- Monthly revenue trend
SELECT 
    DATE_TRUNC('MONTH', BILL_DATE) AS MONTH,
    COUNT(BILLING_ID) AS TOTAL_BILLS,
    SUM(TOTAL_AMOUNT) AS TOTAL_REVENUE,
    AVG(TOTAL_AMOUNT) AS AVG_BILL_AMOUNT,
    SUM(TOTAL_DISCOUNT) AS TOTAL_DISCOUNTS
FROM TENWAVE_DB.DATA.FACT_BILLING
WHERE BILL_DATE IS NOT NULL
GROUP BY DATE_TRUNC('MONTH', BILL_DATE)
ORDER BY MONTH DESC;

-- Revenue by hospital
SELECT 
    b.HOSPITAL_NAME,
    COUNT(f.BILLING_ID) AS TOTAL_BILLS,
    SUM(f.TOTAL_AMOUNT) AS TOTAL_REVENUE,
    AVG(f.TOTAL_AMOUNT) AS AVG_BILL_AMOUNT
FROM TENWAVE_DB.DATA.FACT_BILLING f
JOIN TENWAVE_DB.DATA.DIM_BRANCHES b ON f.HOSPITAL_ID = b.HOSPITAL_ID
GROUP BY b.HOSPITAL_NAME
ORDER BY TOTAL_REVENUE DESC;

-- Department performance
SELECT 
    d.DEPARTMENT_NAME,
    COUNT(f.BILLING_ID) AS TOTAL_BILLS,
    SUM(f.TOTAL_AMOUNT) AS TOTAL_REVENUE,
    AVG(f.TOTAL_AMOUNT) AS AVG_BILL_AMOUNT
FROM TENWAVE_DB.DATA.FACT_BILLING f
JOIN TENWAVE_DB.DATA.DIM_DEPARTMENTS d ON f.DEPARTMENT_ID = d.DEPARTMENT_ID
GROUP BY d.DEPARTMENT_NAME
ORDER BY TOTAL_REVENUE DESC;




--Create a Cortex Search Service.
CREATE OR REPLACE CORTEX SEARCH SERVICE billing_search_service
  ON billing_dimension
  WAREHOUSE = tenwave_analyst_wh
  TARGET_LAG = '1 hour'
  AS (
    SELECT 
      f.billing_id || ' ' ||
      COALESCE(f.bill_status, '') || ' ' ||
      COALESCE(p.name, '') || ' ' ||
      COALESCE(b.hospital_name, '') || ' ' ||
      COALESCE(d.department_name, '') || ' ' ||
      COALESCE(u.first_name, '') || ' ' || COALESCE(u.last_name, '') AS billing_dimension
    FROM tenwave_db.data.fact_billing f
    LEFT JOIN tenwave_db.data.dim_patients p ON f.patient_id = p.patient_id
    LEFT JOIN tenwave_db.data.dim_branches b ON f.hospital_id = b.hospital_id
    LEFT JOIN tenwave_db.data.dim_departments d ON f.department_id = d.department_id
    LEFT JOIN tenwave_db.data.dim_users u ON f.doctor_id = u.doctor_id
  );



  LIST @TENWAVE_DB.DATA.HEALTHCARE_DATA_STAGE;
